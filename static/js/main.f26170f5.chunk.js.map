{"version":3,"sources":["components/section/Section.js","components/contactForm/ContactForm.js","components/contactList/ContactList.js","components/filter/Filter.js","components/App.js","index.js","components/contactForm/ContactForm.module.css","components/contactList/ContactList.module.css"],"names":["Section","title","children","initialState","name","number","ContactForm","addContact","useState","state","setState","onHandleChange","e","target","value","prev","onSubmit","preventDefault","className","form","label","input","type","onChange","pattern","ContactList","contacts","deleteContact","ul","map","item","p","id","onClick","Filter","setFilter","filter","App","JSON","parse","localStorage","getItem","setContacts","useEffect","setItem","stringify","contact","uuidv4","some","toLowerCase","alert","includes","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.f26170f5.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Section = ({title, children}) => {\r\n    return (\r\n        <section>\r\n            <h2>{title}</h2>\r\n            {children}\r\n        </section>\r\n    );\r\n}\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Section;","import React, { useState } from \"react\";\r\nimport { form, label, input } from \"./ContactForm.module.css\";\r\n\r\nconst initialState = {\r\n  name: \"\",\r\n  number: \"\",\r\n};\r\n\r\nconst ContactForm = ({ addContact }) => {\r\n  const [state, setState] = useState({ ...initialState });\r\n\r\n  const onHandleSubmit = (e) => {\r\n    e.preventDefault();\r\n    addContact(state);\r\n    setState({ ...initialState });\r\n  };\r\n\r\n  const onHandleChange = (e) => {\r\n    const { value, name } = e.target;\r\n    setState((prev) => ({...prev, [name]: value }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onHandleSubmit} className={form}>\r\n        <label className={label}>\r\n          Name\r\n          <input\r\n            className={input}\r\n            type=\"text\"\r\n            onChange={onHandleChange}\r\n            value={state.name}\r\n            name=\"name\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          />\r\n        </label>\r\n        <label>\r\n          Number\r\n          <input\r\n            className={input}\r\n            type=\"text\"\r\n            onChange={onHandleChange}\r\n            value={state.number}\r\n            name=\"number\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={input}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {ul, p} from \"./ContactList.module.css\"\r\n\r\nconst ContactList = ({ contacts, deleteContact }) => {\r\n  return (\r\n    <ul className={ul}>\r\n      {contacts.map((item) => (\r\n        <li key={item.id}>\r\n          <p className={p}>\r\n            {item.name}: {item.number}\r\n          </p>\r\n          <button type=\"button\" id={item.id} onClick={deleteContact}>Delete Contact</button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.func.isRequired,\r\n  deleteContact: PropTypes.func.isRequired\r\n}\r\n\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({setFilter, filter}) => {\r\n    return (\r\n        <input\r\n            type=\"text\"\r\n            onChange={setFilter}\r\n            value={filter}\r\n        />\r\n    );\r\n}\r\n\r\nFilter.propTypes = {\r\n    setFilter: PropTypes.func.isRequired,\r\n    filter: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Filter;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Section from \"./section/Section\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport ContactForm from \"./contactForm/ContactForm\";\r\nimport ContactList from \"./contactList/ContactList\";\r\nimport Filter from \"./filter/Filter\";\r\n\r\nconst App = () => {\r\n  const [contacts, setContacts] = useState(\r\n    JSON.parse(localStorage.getItem(\"contacts\")) || [\r\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n    ]\r\n  );\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  // state = {\r\n  //   contacts: JSON.parse(localStorage.getItem(\"contacts\")) || [\r\n  //           { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n  //           { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n  //           { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n  //           { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n  //         ],\r\n  //   filter: \"\",\r\n  // };\r\n\r\n  // componentDidUpdate(prevProps, prevState) {\r\n  //   localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts))\r\n  // }\r\n  useEffect(() => {\r\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\r\n  }, [contacts]);\r\n\r\n  const addContact = (contact) => {\r\n    const id = uuidv4();\r\n    if (\r\n      contacts.some(\r\n        (item) => item.name.toLowerCase() === contact.name.toLowerCase()\r\n      )\r\n    ) {\r\n      return alert(`${contact.name} is already in contacts.`);\r\n    }\r\n    setContacts((prev) => [...prev, { ...contact, id }]);\r\n  };\r\n\r\n  const deleteContact = (e) => {\r\n    const { id } = e.target;\r\n    setContacts((prev) => [...prev.filter((contact) => contact.id !== id)]);\r\n  };\r\n\r\n  const getFilteredContacts = () =>\r\n    contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n\r\n  const ssetFilter = (e) => setFilter(e.target.value);\r\n\r\n  return (\r\n    <>\r\n      <Section title={\"Phonebook\"}>\r\n        <ContactForm addContact={addContact} />\r\n      </Section>\r\n      <Section title={\"Contacts\"}>\r\n        <Filter setFilter={ssetFilter} filter={filter} />\r\n        <ContactList\r\n          contacts={getFilteredContacts()}\r\n          deleteContact={deleteContact}\r\n        />\r\n      </Section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(\r\n  <>\r\n      <App />\r\n  </>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2a6-M\",\"label\":\"ContactForm_label__1_RaE\",\"input\":\"ContactForm_input__ySIUb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ul\":\"ContactList_ul__3JY2w\",\"p\":\"ContactList_p__4_yF2\"};"],"sourceRoot":""}